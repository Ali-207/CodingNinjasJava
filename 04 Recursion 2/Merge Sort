import java.util.Arrays;

public class solution {

	public static void mergeSort(int[] input){
		// Write your code here
        if(input.length <= 1) return;
		int mid = input.length/2;
        int[] part1 = new int[mid];
        int[] part2 = new int[input.length - mid];
        for(int i = 0; i < part1.length; i++){
            part1[i] = input[i];
        }
        int j = 0;
        for(int i = mid; i < input.length; i++){
            part2[j] = input[i];
            j++;
        }
        mergeSort(part1);
        mergeSort(part2);
        merge(part1, part2, input);
	}
    
    public static void merge(int[] part1, int[]part2, int[] input){
        int i = 0;
        int j = 0;
        int k = 0;
        while(i < part1.length && j < part2.length){
            if(part1[i] < part2[j]){
                input[k] = part1[i];
                i++;
                k++;
            }else{
                input[k] = part2[j];
                j++;
                k++;
            }
        }
        while( i < part1.length){
            input[k] = part1[i];
            i++;
            k++;
        }
        while(j < part2.length){
            input[k] = part2[j];
            k++;
            j++;
        }
    }
}
